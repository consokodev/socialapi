# Generated by Django 2.2.6 on 2019-10-16 15:22

import datetime
from django.db import migrations, models
from django.utils.timezone import utc
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('account_type', models.CharField(default='Email', max_length=100)),
                ('fullname', models.CharField(max_length=255, null=True)),
                ('gender', models.BooleanField(choices=[(False, 'Nam'), (True, 'Nu')], null=True)),
                ('birthday', models.DateField(null=True)),
                ('avatar', models.CharField(max_length=255, null=True)),
                ('is_banned', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2019, 10, 16, 15, 22, 46, 427699, tzinfo=utc))),
                ('is_activated', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
    ]
